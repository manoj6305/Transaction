import React, { useState } from "react";
import { Form, Input, Button, Switch, Upload, Slider } from "antd";
import { UploadOutlined } from '@ant-design/icons';

const Forms = () => {
  const [isToggleOn, setIsToggleOn] = useState(true);
  const [isToggleDisabled, setIsToggleDisabled] = useState(false);
  const [isSliderDisabled, setIsSliderDisabled] = useState(false);

  const formItems = [
    {
      label: "Toggle",
      name: "toggle",
      rules: [{ required: true },
        { type: "boolean", message: "Please select a valid value" }],
      render: () => <Switch disabled={isToggleDisabled} checked={isToggleOn} onChange={(checked) => setIsToggleOn(checked)}  />,
    },
    {
      render: () =>(
         <Button 
           type="primary"
           onClick={handleButtonClick}
          >
           {isToggleDisabled ? 'Enable ' : 'Disable '}
        </Button>
      )
    },
    {
      label: "File Upload",
      name: "file",
      render: () => (
        <Upload>
          <Button icon={<UploadOutlined />}>Click to Upload</Button>
        </Upload>
      ),
    },
    

    {
      label:'Toggle2',
      name:'toggle2' ,
      render: () => <Switch checkedChildren='Yes' unCheckedChildren='No'/>,
    },
    {
      label:'Toggle3',
      name:'toggle3',
      render: () => <Switch loading={false}  disabled={false}/>,
    },
    {
      label: "Slider",
      name: "slider",
      rules:[{ type: "number", min: 20, max: 200, message: "Please enter a number between 20 and 100" }],
      render: () => <Slider  step={10}  />,
    },
    {
      label:'Slider1',
      name:'slider1',
      render: () => <Slider range defaultValue={[20, 50]} disabled={isSliderDisabled} />,
    },
    {
      render: () => (
        <Button type="primary"
          onClick={() => setIsSliderDisabled(!isSliderDisabled)}
        >
          {isSliderDisabled ? 'Enable ' : 'Disable '}
        </Button>
      ),
    },
  ];

  const handleButtonClick = () => {
    setIsToggleDisabled(!isToggleDisabled); // Toggle the disabled state of the switch
  };

  const onFinish = (values) => {
    console.log("Received values:", values);
  };

  return (
    <Form onFinish={onFinish}>
      {formItems.map((item, index) => (
        <Form.Item
          key={index}
          label={item.label}
          name={item.name}
          rules={item.rules}
        >
          {item.render()}
        </Form.Item>
      ))}
    </Form>
  );
};

export default Forms;
